# Override values for pipelines.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## JFrog Pipelines API server
api:
  replicaCount: 1

  ## Set this instance of JFrog Pipelines' service ID to be registered in Artifactory.
  ## For production, the unique ID should be generated instead of using 123456789: openssl rand | tr -dc 1-9 | head -c 10
  serviceId: jfpip@123456789

  # Artifactory connection details
  artifactory:
    ## The Artifactory URL to be use by JFrog Pipelines for authentication.
    ## DO NOT add the /artifactory to the URL.
    url: https://artifactory.example.com
    ## The user should have admin privileges on Artifactory.
    username: admin

  rabbitMq:
    user: admin
    uiUser: adminui

  ingress:
    enabled: true
    annotations:
      ## If NOT using letsencrypt, you can omit these two lines
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ## If NOT using letsencrypt, you can omit two lines above

      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"

      ## Set a custom whitelist IP CIDRs. Comma delimited.
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32,2.3.4.5/32"
    path: /
    hosts:
      - pipelines-api.example.com    
    tls:
      - secretName: pipelines-api.example.com
        hosts:
          - pipelines-api.example.com


## JFrog Pipelines web server
www:
  replicaCount: 1

  image:
    repository: jfrog/pipelines-www
    # tag:
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 30001

  ingress:
    enabled: true
    annotations:
      ## If NOT using letsencrypt, you can omit these two lines
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ## If NOT using letsencrypt, you can omit two lines above

      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"

      ## Set a custom whitelist IP CIDRs. Comma delimited.
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32,2.3.4.5/32"
    path: /
    hosts:
      - pipelines.example.com    
    tls:
      - secretName: pipelines.example.com
        hosts:
          - pipelines.example.com


## JFrog Pipelines RabbitMQ server
msg:

  # LoadBalancer to access RabbitMQ by Node-pool VMs
  serviceLB:

    annotations:
    # Set internal LB for GCP
      cloud.google.com/load-balancer-type: "Internal"

    # Set LB static IP
    loadBalancerIP:

    # Whitelist IPs allowed to LoadBalancer type services
    # Example: loadBalancerSourceRanges={82.82.190.51/32,141.141.8.8/32}
    loadBalancerSourceRanges: []

  rabbitmqUsername: guest
  rabbitmqNodePort: 30200
  rabbitmqAdminNodePort: 30201

  ingress:
    enabled: true
    annotations:
      ## If NOT using letsencrypt, you can omit these two lines
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ## If NOT using letsencrypt, you can omit two lines above

      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"

      ## Set a custom whitelist IP CIDRs. Comma delimited.
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32,2.3.4.5/32"
    path: /
    hosts:
      - pipelines-msg.example.com
    tls:
      - secretName: pipelines-msg.example.com
        hosts:
          - pipelines-msg.example.com
